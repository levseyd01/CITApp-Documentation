name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - stable
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - stable

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
          
      # Add Sphinx build steps
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme sphinx-design sphinx-copybutton sphinx-togglebutton sphinx-tippy myst-parser sphinx_book_theme rst2pdf
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f source/requirements.txt ]; then pip install -r source/requirements.txt; fi
          
      - name: Build Sphinx docs
        run: |
          # List directory structure before build
          echo "Current directory structure:"
          ls -la
          
          # Create symbolic link for _ext directory to ensure it's found
          mkdir -p build/html/_ext
          cp -r source/_ext/* build/html/_ext/
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          
          # Debug the Python import paths
          echo "Python path:"
          python -c "import sys; print(sys.path)"
          
          # Build the docs using the Makefile
          make html
          
          # Check build directory
          echo "Checking build directory:"
          ls -la build/html || echo "No build/html directory found!"
          
          # Copy routes.json to the build directory
          if [ -f "routes.json" ] && [ -d "build/html" ]; then
            echo "Copying routes.json to build/html"
            cp routes.json build/html/
          fi
          
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
           script: |
               const coredemo = require('@actions/core')
               return await coredemo.getIDToken()
           result-encoding: string
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_WONDERFUL_PLANT_0E077991E }}
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "build/html" # This matches the Makefile build output location
          api_location: "" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          github_id_token: ${{ steps.idtoken.outputs.result }}
          routes_location: "/" # Added to include your routes config
          ###### End of Repository/Build Configurations ######

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
