selector_to_html = {"a[href=\"#usage\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Usage<a class=\"headerlink\" href=\"#usage\" title=\"Link to this heading\">#</a></h2>", "a[href=\"#releases\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Releases<a class=\"headerlink\" href=\"#releases\" title=\"Link to this heading\">#</a></h2><p>This package will be released and keep the same major/minor version numbers as Shiki.\nPatch versions will generally be the same as Shiki, but may differ if adjustments are\nnecessary to fix compatibility issues.</p>", "a[href=\"#esm-commonjs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">ESM / CommonJS<a class=\"headerlink\" href=\"#esm-commonjs\" title=\"Link to this heading\">#</a></h2><p>This package is ESM, but does not use top level await, so may be <code class=\"docutils literal notranslate\"><span class=\"pre\">require</span></code>d in\nNode 23, or Node 20.17+ with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--experimental-require-module</span></code> flag.</p>", "a[href=\"#gerrit0-mini-shiki\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">@gerrit0/mini-shiki<a class=\"headerlink\" href=\"#gerrit0-mini-shiki\" title=\"Link to this heading\">#</a></h1><p>This is a re-bundled version of <a class=\"tippyAnchor reference external\" href=\"https://shiki.style/\">Shiki</a> which strips out\nthe dependencies which aren\u2019t necessary for <a class=\"tippyAnchor reference external\" href=\"https://typedoc.org/\">TypeDoc</a>\u2019s usage.</p>", "a[href=\"#why\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Why?<a class=\"headerlink\" href=\"#why\" title=\"Link to this heading\">#</a></h2><p>Compare Shiki\u2019s dependency tree:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
