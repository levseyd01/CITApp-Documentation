selector_to_html = {"a[href=\"#add-key-value\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.add(key, value)<a class=\"headerlink\" href=\"#add-key-value\" title=\"Link to this heading\">#</a></h3><p>Add a new schema to the schemas object.  As described in the constructor\ndefinition, <code class=\"docutils literal notranslate\"><span class=\"pre\">key</span></code> is a link prefix (<code class=\"docutils literal notranslate\"><span class=\"pre\">skype:</span></code>, for example), and <code class=\"docutils literal notranslate\"><span class=\"pre\">value</span></code>\nis a String to alias to another schema, or an Object with <code class=\"docutils literal notranslate\"><span class=\"pre\">validate</span></code> and\noptionally <code class=\"docutils literal notranslate\"><span class=\"pre\">normalize</span></code> definitions.  To disable an existing rule, use\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.add(key,</span> <span class=\"pre\">null)</span></code>.</p>", "a[href=\"#linkify-it\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">linkify-it<a class=\"headerlink\" href=\"#linkify-it\" title=\"Link to this heading\">#</a></h1><p><a class=\"tippyAnchor reference external\" href=\"https://github.com/markdown-it/linkify-it/actions/workflows/ci.yml\"><img alt=\"CI\" loading=\"lazy\" src=\"https://github.com/markdown-it/linkify-it/actions/workflows/ci.yml/badge.svg\"/></a>\n<a class=\"tippyAnchor reference external\" href=\"https://www.npmjs.org/package/linkify-it\"><img alt=\"NPM version\" loading=\"lazy\" src=\"https://img.shields.io/npm/v/linkify-it.svg?style=flat\"/></a>\n<a class=\"tippyAnchor reference external\" href=\"https://coveralls.io/r/markdown-it/linkify-it?branch=master\"><img alt=\"Coverage Status\" loading=\"lazy\" src=\"https://img.shields.io/coveralls/markdown-it/linkify-it/master.svg?style=flat\"/></a>\n<a class=\"tippyAnchor reference external\" href=\"https://gitter.im/markdown-it/linkify-it\"><img alt=\"Gitter\" loading=\"lazy\" src=\"https://badges.gitter.im/Join%20Chat.svg\"/></a></p>", "a[href=\"#new-linkifyit-schemas-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">new LinkifyIt(schemas, options)<a class=\"headerlink\" href=\"#new-linkifyit-schemas-options\" title=\"Link to this heading\">#</a></h3><p>Creates new linkifier instance with optional additional schemas.\nCan be called without <code class=\"docutils literal notranslate\"><span class=\"pre\">new</span></code> keyword for convenience.</p><p>By default understands:</p>", "a[href=\"#license\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">License<a class=\"headerlink\" href=\"#license\" title=\"Link to this heading\">#</a></h2><p><a class=\"tippyAnchor reference external\" href=\"https://github.com/markdown-it/linkify-it/blob/master/LICENSE\">MIT</a></p>", "a[href=\"#pretest-text\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.pretest(text)<a class=\"headerlink\" href=\"#pretest-text\" title=\"Link to this heading\">#</a></h3><p>Quick check if link MAY BE can exist. Can be used to optimize more expensive\n<code class=\"docutils literal notranslate\"><span class=\"pre\">.test()</span></code> calls. Return <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> if link can not be found, <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> - if <code class=\"docutils literal notranslate\"><span class=\"pre\">.test()</span></code>\ncall needed to know exactly.</p>", "a[href=\"#test-text\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.test(text)<a class=\"headerlink\" href=\"#test-text\" title=\"Link to this heading\">#</a></h3><p>Searches linkifiable pattern and returns <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> on success or <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> on fail.</p>", "a[href=\"#example-2-add-twitter-mentions-handler\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Example 2. Add twitter mentions handler<a class=\"headerlink\" href=\"#example-2-add-twitter-mentions-handler\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#usage-examples\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Usage examples<a class=\"headerlink\" href=\"#usage-examples\" title=\"Link to this heading\">#</a></h2><h3>Example 1<a class=\"headerlink\" href=\"#example-1\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#testschemaat-text-name-offset\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.testSchemaAt(text, name, offset)<a class=\"headerlink\" href=\"#testschemaat-text-name-offset\" title=\"Link to this heading\">#</a></h3><p>Similar to <code class=\"docutils literal notranslate\"><span class=\"pre\">.test()</span></code> but checks only specific protocol tail exactly at given\nposition. Returns length of found pattern (0 on fail).</p>", "a[href=\"#set-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.set(options)<a class=\"headerlink\" href=\"#set-options\" title=\"Link to this heading\">#</a></h3><p>Override default options. Missed properties will not be changed.</p>", "a[href=\"#install\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Install<a class=\"headerlink\" href=\"#install\" title=\"Link to this heading\">#</a></h2><p>Browserification is also supported.</p>", "a[href=\"#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">#</a></h2><p><strong><a class=\"tippyAnchor reference external\" href=\"http://markdown-it.github.io/linkify-it/doc\">API documentation</a></strong></p>", "a[href=\"#matchatstart-text\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.matchAtStart(text)<a class=\"headerlink\" href=\"#matchatstart-text\" title=\"Link to this heading\">#</a></h3><p>Checks if a match exists at the start of the string. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">Match</span></code>\n(see docs for <code class=\"docutils literal notranslate\"><span class=\"pre\">match(text)</span></code>) or null if no URL is at the start.\nDoesn\u2019t work with fuzzy links.</p>", "a[href=\"#tlds-list-keepold\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.tlds(list[, keepOld])<a class=\"headerlink\" href=\"#tlds-list-keepold\" title=\"Link to this heading\">#</a></h3><p>Load (or merge) new tlds list. Those are needed for fuzzy links (without schema)\nto avoid false positives. By default:</p>", "a[href=\"#example-1\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Example 1<a class=\"headerlink\" href=\"#example-1\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#match-text\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.match(text)<a class=\"headerlink\" href=\"#match-text\" title=\"Link to this heading\">#</a></h3><p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">Array</span></code> of found link matches or null if nothing found.</p><p>Each match has:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
