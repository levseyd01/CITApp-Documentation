selector_to_html = {"a[href=\"#decode-defaultchars-decode-componentchars\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">decode.defaultChars, decode.componentChars<a class=\"headerlink\" href=\"#decode-defaultchars-decode-componentchars\" title=\"Link to this heading\">#</a></h3><p>You can use these constants as second argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">decode</span></code> function.</p>", "a[href=\"#license\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">License<a class=\"headerlink\" href=\"#license\" title=\"Link to this heading\">#</a></h2><p><a class=\"tippyAnchor reference external\" href=\"https://github.com/markdown-it/mdurl/blob/master/LICENSE\">MIT</a></p>", "a[href=\"#parse-url-slashesdenotehost-urlobs\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.parse(url, slashesDenoteHost) -&gt; urlObs<a class=\"headerlink\" href=\"#parse-url-slashesdenotehost-urlobs\" title=\"Link to this heading\">#</a></h3><p>Parse url string. Similar to node\u2019s <a class=\"tippyAnchor reference external\" href=\"http://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost\">url.parse</a>, but without any\nnormalizations and query string parse.</p>", "a[href=\"#encode-defaultchars-encode-componentchars\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">encode.defaultChars, encode.componentChars<a class=\"headerlink\" href=\"#encode-defaultchars-encode-componentchars\" title=\"Link to this heading\">#</a></h3><p>You can use these constants as second argument to <code class=\"docutils literal notranslate\"><span class=\"pre\">encode</span></code> function.</p>", "a[href=\"#format-urlobject\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.format(urlObject)<a class=\"headerlink\" href=\"#format-urlobject\" title=\"Link to this heading\">#</a></h3><p>Format an object previously obtained with <code class=\"docutils literal notranslate\"><span class=\"pre\">.parse()</span></code> function. Similar to node\u2019s\n<a class=\"tippyAnchor reference external\" href=\"http://nodejs.org/api/url.html#url_url_format_urlobj\">url.format</a>.</p>", "a[href=\"#mdurl\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">mdurl<a class=\"headerlink\" href=\"#mdurl\" title=\"Link to this heading\">#</a></h1><p><a class=\"tippyAnchor reference external\" href=\"https://github.com/markdown-it/mdurl/actions/workflows/ci.yml\"><img alt=\"CI\" loading=\"lazy\" src=\"https://github.com/markdown-it/mdurl/actions/workflows/ci.yml/badge.svg\"/></a>\n<a class=\"tippyAnchor reference external\" href=\"https://www.npmjs.org/package/mdurl\"><img alt=\"NPM version\" loading=\"lazy\" src=\"https://img.shields.io/npm/v/mdurl.svg?style=flat\"/></a></p>", "a[href=\"#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">#</a></h2><h3>.encode(str [, exclude, keepEncoded]) -&gt; String<a class=\"headerlink\" href=\"#encode-str-exclude-keepencoded-string\" title=\"Link to this heading\">#</a></h3><p>Percent-encode a string, avoiding double encoding. Don\u2019t touch <code class=\"docutils literal notranslate\"><span class=\"pre\">/a-zA-Z0-9/</span></code> +\nexcluded chars + <code class=\"docutils literal notranslate\"><span class=\"pre\">/%[a-fA-F0-9]{2}/</span></code> (if not disabled). Broken surrorates are\nreplaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">U+FFFD</span></code>.</p><p>Params:</p>", "a[href=\"#encode-str-exclude-keepencoded-string\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.encode(str [, exclude, keepEncoded]) -&gt; String<a class=\"headerlink\" href=\"#encode-str-exclude-keepencoded-string\" title=\"Link to this heading\">#</a></h3><p>Percent-encode a string, avoiding double encoding. Don\u2019t touch <code class=\"docutils literal notranslate\"><span class=\"pre\">/a-zA-Z0-9/</span></code> +\nexcluded chars + <code class=\"docutils literal notranslate\"><span class=\"pre\">/%[a-fA-F0-9]{2}/</span></code> (if not disabled). Broken surrorates are\nreplaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">U+FFFD</span></code>.</p><p>Params:</p>", "a[href=\"#decode-str-exclude-string\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">.decode(str [, exclude]) -&gt; String<a class=\"headerlink\" href=\"#decode-str-exclude-string\" title=\"Link to this heading\">#</a></h3><p>Decode percent-encoded string. Invalid percent-encoded sequences (e.g. <code class=\"docutils literal notranslate\"><span class=\"pre\">%2G</span></code>)\nare left as is. Invalid UTF-8 characters are replaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">U+FFFD</span></code>.</p><p>Params:</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
