selector_to_html = {"a[href=\"#windows\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Windows<a class=\"headerlink\" href=\"#windows\" title=\"Link to this heading\">#</a></h2><p><strong>Please only use forward-slashes in glob expressions.</strong></p><p>Though windows uses either <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">\\</span></code> as its path separator, only <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code>\ncharacters are used by this glob implementation. You must use\nforward-slashes <strong>only</strong> in glob expressions. Back-slashes in patterns\nwill always be interpreted as escape characters, not path separators.</p>", "a[href=\"#debug\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">debug<a class=\"headerlink\" href=\"#debug\" title=\"Link to this heading\">#</a></h3><p>Dump a ton of stuff to stderr.</p>", "a[href=\"#partial\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">partial<a class=\"headerlink\" href=\"#partial\" title=\"Link to this heading\">#</a></h3><p>Compare a partial path to a pattern. As long as the parts of the path that\nare present are not contradicted by the pattern, it will be treated as a\nmatch. This is useful in applications where you\u2019re walking through a\nfolder structure, and don\u2019t yet have the full path, but want to ensure that\nyou do not walk down paths that can never be a match.</p><p>For example,</p>", "a[href=\"#flipnegate\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">flipNegate<a class=\"headerlink\" href=\"#flipnegate\" title=\"Link to this heading\">#</a></h3><p>Returns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)</p>", "a[href=\"#methods\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Methods<a class=\"headerlink\" href=\"#methods\" title=\"Link to this heading\">#</a></h3><p>All other methods are internal, and will be called as necessary.</p>", "a[href=\"#dot\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">dot<a class=\"headerlink\" href=\"#dot\" title=\"Link to this heading\">#</a></h3><p>Allow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.</p><p>Note that by default, <code class=\"docutils literal notranslate\"><span class=\"pre\">a/**/b</span></code> will <strong>not</strong> match <code class=\"docutils literal notranslate\"><span class=\"pre\">a/.d/b</span></code>, unless <code class=\"docutils literal notranslate\"><span class=\"pre\">dot</span></code>\nis set.</p>", "a[href=\"#nocomment\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">nocomment<a class=\"headerlink\" href=\"#nocomment\" title=\"Link to this heading\">#</a></h3><p>Suppress the behavior of treating <code class=\"docutils literal notranslate\"><span class=\"pre\">#</span></code> at the start of a pattern as a\ncomment.</p>", "a[href=\"#minimatch-makere-pattern-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch.makeRe(pattern, options)<a class=\"headerlink\" href=\"#minimatch-makere-pattern-options\" title=\"Link to this heading\">#</a></h3><p>Make a regular expression object from the pattern.</p>", "a[href=\"#features\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Features<a class=\"headerlink\" href=\"#features\" title=\"Link to this heading\">#</a></h2><p>Supports these glob features:</p>", "a[href=\"#nonegate\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">nonegate<a class=\"headerlink\" href=\"#nonegate\" title=\"Link to this heading\">#</a></h3><p>Suppress the behavior of treating a leading <code class=\"docutils literal notranslate\"><span class=\"pre\">!</span></code> character as negation.</p>", "a[href=\"#preservemultipleslashes\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">preserveMultipleSlashes<a class=\"headerlink\" href=\"#preservemultipleslashes\" title=\"Link to this heading\">#</a></h3><p>By default, multiple <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code> characters (other than the leading <code class=\"docutils literal notranslate\"><span class=\"pre\">//</span></code>\nin a UNC path, see \u201cUNC Paths\u201d above) are treated as a single\n<code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code>.</p><p>That is, a pattern like <code class=\"docutils literal notranslate\"><span class=\"pre\">a///b</span></code> will match the file path <code class=\"docutils literal notranslate\"><span class=\"pre\">a/b</span></code>.</p>", "a[href=\"#windowspathsnoescape\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">windowsPathsNoEscape<a class=\"headerlink\" href=\"#windowspathsnoescape\" title=\"Link to this heading\">#</a></h3><p>Use <code class=\"docutils literal notranslate\"><span class=\"pre\">\\\\</span></code> as a path separator <em>only</em>, and <em>never</em> as an escape\ncharacter. If set, all <code class=\"docutils literal notranslate\"><span class=\"pre\">\\\\</span></code> characters are replaced with <code class=\"docutils literal notranslate\"><span class=\"pre\">/</span></code> in\nthe pattern. Note that this makes it <strong>impossible</strong> to match\nagainst paths containing literal glob pattern characters, but\nallows matching with patterns constructed using <code class=\"docutils literal notranslate\"><span class=\"pre\">path.join()</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">path.resolve()</span></code> on Windows platforms, mimicking the (buggy!)\nbehavior of earlier versions on Windows. Please use with\ncaution, and be mindful of <a class=\"reference internal\" href=\"#windows\"><span class=\"std std-ref\">the caveat about Windows\npaths</span></a>.</p><p>For legacy reasons, this is also set if\n<code class=\"docutils literal notranslate\"><span class=\"pre\">options.allowWindowsEscape</span></code> is set to the exact value <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code>.</p>", "a[href=\"#matchbase\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">matchBase<a class=\"headerlink\" href=\"#matchbase\" title=\"Link to this heading\">#</a></h3><p>If set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes. For example,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">a?b</span></code> would match the path <code class=\"docutils literal notranslate\"><span class=\"pre\">/xyz/123/acb</span></code>, but not <code class=\"docutils literal notranslate\"><span class=\"pre\">/xyz/acb/123</span></code>.</p>", "a[href=\"#unc-paths\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">UNC Paths<a class=\"headerlink\" href=\"#unc-paths\" title=\"Link to this heading\">#</a></h3><p>On Windows, UNC paths like <code class=\"docutils literal notranslate\"><span class=\"pre\">//?/c:/...</span></code> or\n<code class=\"docutils literal notranslate\"><span class=\"pre\">//ComputerName/Share/...</span></code> are handled specially.</p>", "a[href=\"#minimatch-filter-pattern-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch.filter(pattern, options)<a class=\"headerlink\" href=\"#minimatch-filter-pattern-options\" title=\"Link to this heading\">#</a></h3><p>Returns a function that tests its\nsupplied argument, suitable for use with <code class=\"docutils literal notranslate\"><span class=\"pre\">Array.filter</span></code>. Example:</p>", "a[href=\"#optimizationlevel\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">optimizationLevel<a class=\"headerlink\" href=\"#optimizationlevel\" title=\"Link to this heading\">#</a></h3><p>A number indicating the level of optimization that should be done\nto the pattern prior to parsing and using it for matches.</p><p>Globstar parts <code class=\"docutils literal notranslate\"><span class=\"pre\">**</span></code> are always converted to <code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code> when <code class=\"docutils literal notranslate\"><span class=\"pre\">noglobstar</span></code>\nis set, and multiple adjacent <code class=\"docutils literal notranslate\"><span class=\"pre\">**</span></code> parts are converted into a\nsingle <code class=\"docutils literal notranslate\"><span class=\"pre\">**</span></code> (ie, <code class=\"docutils literal notranslate\"><span class=\"pre\">a/**/**/b</span></code> will be treated as <code class=\"docutils literal notranslate\"><span class=\"pre\">a/**/b</span></code>, as this\nis equivalent in all cases).</p>", "a[href=\"#properties\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Properties<a class=\"headerlink\" href=\"#properties\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#nonull\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">nonull<a class=\"headerlink\" href=\"#nonull\" title=\"Link to this heading\">#</a></h3><p>When a match is not found by <code class=\"docutils literal notranslate\"><span class=\"pre\">minimatch.match</span></code>, return a list containing\nthe pattern itself if this option is set. When not set, an empty list\nis returned if there are no matches.</p>", "a[href=\"#noglobstar\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">noglobstar<a class=\"headerlink\" href=\"#noglobstar\" title=\"Link to this heading\">#</a></h3><p>Disable <code class=\"docutils literal notranslate\"><span class=\"pre\">**</span></code> matching against multiple folder names.</p>", "a[href=\"#comparisons-to-other-fnmatch-glob-implementations\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Comparisons to other fnmatch/glob implementations<a class=\"headerlink\" href=\"#comparisons-to-other-fnmatch-glob-implementations\" title=\"Link to this heading\">#</a></h2><p>While strict compliance with the existing standards is a\nworthwhile goal, some discrepancies exist between minimatch and\nother implementations. Some are intentional, and some are\nunavoidable.</p><p>If the pattern starts with a <code class=\"docutils literal notranslate\"><span class=\"pre\">!</span></code> character, then it is negated. Set the\n<code class=\"docutils literal notranslate\"><span class=\"pre\">nonegate</span></code> flag to suppress this behavior, and treat leading <code class=\"docutils literal notranslate\"><span class=\"pre\">!</span></code>\ncharacters normally. This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like <code class=\"docutils literal notranslate\"><span class=\"pre\">!(a|B)</span></code>. Multiple <code class=\"docutils literal notranslate\"><span class=\"pre\">!</span></code>\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.</p>", "a[href=\"#minimatch\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch<a class=\"headerlink\" href=\"#minimatch\" title=\"Link to this heading\">#</a></h1><p>A minimal matching utility.</p><p>This is the matching library used internally by npm.</p>", "a[href=\"#options\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Options<a class=\"headerlink\" href=\"#options\" title=\"Link to this heading\">#</a></h2><p>All options are <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> by default.</p>", "a[href=\"#minimatch-path-pattern-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch(path, pattern, options)<a class=\"headerlink\" href=\"#minimatch-path-pattern-options\" title=\"Link to this heading\">#</a></h3><p>Main export. Tests a path against the pattern using the options.</p>", "a[href=\"#noext\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">noext<a class=\"headerlink\" href=\"#noext\" title=\"Link to this heading\">#</a></h3><p>Disable \u201cextglob\u201d style patterns like <code class=\"docutils literal notranslate\"><span class=\"pre\">+(a|b)</span></code>.</p>", "a[href=\"#minimatch-escape-pattern-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch.escape(pattern, options = {})<a class=\"headerlink\" href=\"#minimatch-escape-pattern-options\" title=\"Link to this heading\">#</a></h3><p>Escape all magic characters in a glob pattern, so that it will\nonly ever match literal strings</p><p>If the <code class=\"docutils literal notranslate\"><span class=\"pre\">windowsPathsNoEscape</span></code> option is used, then characters are\nescaped by wrapping in <code class=\"docutils literal notranslate\"><span class=\"pre\">[]</span></code>, because a magic character wrapped in\na character class can only be satisfied by that exact character.</p>", "a[href=\"#magicalbraces\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">magicalBraces<a class=\"headerlink\" href=\"#magicalbraces\" title=\"Link to this heading\">#</a></h3><p>This only affects the results of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Minimatch.hasMagic</span></code> method.</p><p>If the pattern contains brace expansions, such as <code class=\"docutils literal notranslate\"><span class=\"pre\">a{b,c}d</span></code>, but\nno other magic characters, then the <code class=\"docutils literal notranslate\"><span class=\"pre\">Minimatch.hasMagic()</span></code> method\nwill return <code class=\"docutils literal notranslate\"><span class=\"pre\">false</span></code> by default. When this option set, it will\nreturn <code class=\"docutils literal notranslate\"><span class=\"pre\">true</span></code> for brace expansion as well as other magic glob\ncharacters.</p>", "a[href=\"#minimatch-class\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Minimatch Class<a class=\"headerlink\" href=\"#minimatch-class\" title=\"Link to this heading\">#</a></h2><p>Create a minimatch object by instantiating the <code class=\"docutils literal notranslate\"><span class=\"pre\">minimatch.Minimatch</span></code> class.</p>", "a[href=\"#nocase\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">nocase<a class=\"headerlink\" href=\"#nocase\" title=\"Link to this heading\">#</a></h3><p>Perform a case-insensitive match.</p>", "a[href=\"#windowsnomagicroot\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">windowsNoMagicRoot<a class=\"headerlink\" href=\"#windowsnomagicroot\" title=\"Link to this heading\">#</a></h3><p>When a pattern starts with a UNC path or drive letter, and in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">nocase:true</span></code> mode, do not convert the root portions of the\npattern into a case-insensitive regular expression, and instead\nleave them as strings.</p><p>This is the default when the platform is <code class=\"docutils literal notranslate\"><span class=\"pre\">win32</span></code> and\n<code class=\"docutils literal notranslate\"><span class=\"pre\">nocase:true</span></code> is set.</p>", "a[href=\"#platform\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">platform<a class=\"headerlink\" href=\"#platform\" title=\"Link to this heading\">#</a></h3><p>When set to <code class=\"docutils literal notranslate\"><span class=\"pre\">win32</span></code>, this will trigger all windows-specific\nbehaviors (special handling for UNC paths, and treating <code class=\"docutils literal notranslate\"><span class=\"pre\">\\</span></code> as\nseparators in file paths for comparison.)</p><p>Defaults to the value of <code class=\"docutils literal notranslate\"><span class=\"pre\">process.platform</span></code>.</p>", "a[href=\"#minimatch-match-list-pattern-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch.match(list, pattern, options)<a class=\"headerlink\" href=\"#minimatch-match-list-pattern-options\" title=\"Link to this heading\">#</a></h3><p>Match against the list of\nfiles, in the style of fnmatch or glob. If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.</p>", "a[href=\"#nocasemagiconly\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">nocaseMagicOnly<a class=\"headerlink\" href=\"#nocasemagiconly\" title=\"Link to this heading\">#</a></h3><p>When used with <code class=\"docutils literal notranslate\"><span class=\"pre\">{nocase:</span> <span class=\"pre\">true}</span></code>, create regular expressions that\nare case-insensitive, but leave string match portions untouched.\nHas no effect when used without <code class=\"docutils literal notranslate\"><span class=\"pre\">{nocase:</span> <span class=\"pre\">true}</span></code></p><p>Useful when some other form of case-insensitive matching is used,\nor if the original string representation is useful in some other\nway.</p>", "a[href=\"#nobrace\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">nobrace<a class=\"headerlink\" href=\"#nobrace\" title=\"Link to this heading\">#</a></h3><p>Do not expand <code class=\"docutils literal notranslate\"><span class=\"pre\">{a,b}</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">{1..3}</span></code> brace sets.</p>", "a[href=\"#usage\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Usage<a class=\"headerlink\" href=\"#usage\" title=\"Link to this heading\">#</a></h2>", "a[href=\"#minimatch-unescape-pattern-options\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">minimatch.unescape(pattern, options = {})<a class=\"headerlink\" href=\"#minimatch-unescape-pattern-options\" title=\"Link to this heading\">#</a></h3><p>Un-escape a glob string that may contain some escaped characters.</p><p>If the <code class=\"docutils literal notranslate\"><span class=\"pre\">windowsPathsNoEscape</span></code> option is used, then square-brace\nescapes are removed, but not backslash escapes. For example, it\nwill turn the string <code class=\"docutils literal notranslate\"><span class=\"pre\">'[*]'</span></code> into <code class=\"docutils literal notranslate\"><span class=\"pre\">*</span></code>, but it will not turn\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'\\\\*'</span></code> into <code class=\"docutils literal notranslate\"><span class=\"pre\">'*'</span></code>, because <code class=\"docutils literal notranslate\"><span class=\"pre\">\\</span></code> is a path separator in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">windowsPathsNoEscape</span></code> mode.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
